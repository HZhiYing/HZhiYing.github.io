<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>志颖の微博</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-10T10:05:47.063Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黄志颖</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQLites数据库</title>
    <link href="http://yoursite.com/2017/12/07/SQLite%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2017/12/07/SQLite数据库/</id>
    <published>2017-12-06T19:33:37.000Z</published>
    <updated>2017-12-10T10:05:47.063Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;&emsp;SQLite，是一款轻型的数据库，是遵守ACID的关系型数据库管理系统，它包含在一个相对小的C库中。它的设计目标是<strong>嵌入式</strong>的，<strong>占用资源非常的低</strong>，可能只需要几百K的内存就够了。它能够支持Windows/Linux/Unix等等主流的操作系统，同时能够跟很多程序语言相结合，比如 Tcl、C#、PHP、Java等，还有ODBC接口，同样比起Mysql、PostgreSQL这两款开源的世界著名数据库管理系统来讲，它的处理速度比他们都快。<br><a id="more"></a></p><h4 id="SQLite的具体实现"><a href="#SQLite的具体实现" class="headerlink" title="SQLite的具体实现"></a>SQLite的具体实现</h4><h5 id="导入资源文件-定义全局数据库对象"><a href="#导入资源文件-定义全局数据库对象" class="headerlink" title="导入资源文件,定义全局数据库对象"></a>导入资源文件,定义全局数据库对象</h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;sqlite3.h&gt;</span></span></span><br><span class="line"><span class="keyword">static</span> sqlite3 *DB = <span class="literal">nil</span>;</span><br></pre></td></tr></table></figure><h5 id="获得数据库的保存路径"><a href="#获得数据库的保存路径" class="headerlink" title="获得数据库的保存路径"></a>获得数据库的保存路径</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (NSString *)getSqlitePath &#123;</span><br><span class="line">    return [[NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) firstObject] stringByAppendingPathComponent:@&quot;DB.sqlite&quot;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="打开数据库"><a href="#打开数据库" class="headerlink" title="打开数据库"></a>打开数据库</h5><blockquote><p>打开数据库,如果数据库不存在,会自动创建数据库</p></blockquote><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)openSqlite &#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="keyword">const</span> *sqlitePath = [[<span class="keyword">self</span> getSqlitePath] UTF8String];</span><br><span class="line">    <span class="keyword">return</span> (sqlite3_open(sqlitePath, &amp;DB) == SQLITE_OK);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="关闭数据库"><a href="#关闭数据库" class="headerlink" title="关闭数据库"></a>关闭数据库</h5><blockquote><p>数据库的每次操作(如:插入,删除,更新等)完成时,都必须关闭数据库</p></blockquote><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)closeSqlite &#123;</span><br><span class="line">    sqlite3_close(DB);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="执行数据库语句"><a href="#执行数据库语句" class="headerlink" title="执行数据库语句"></a>执行数据库语句</h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)execSql:(<span class="built_in">NSString</span> *)sql &#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="keyword">const</span> *sql_stmt = sql.UTF8String;</span><br><span class="line">    <span class="keyword">return</span> sqlite3_exec(DB, sql_stmt, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>) == SQLITE_OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="数据记录表格的创建与删除"><a href="#数据记录表格的创建与删除" class="headerlink" title="数据记录表格的创建与删除"></a>数据记录表格的创建与删除</h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)createTable &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *sql_stmt = <span class="string">@"create table if not exists t_stu(id integer primary key autoincrement, name text, age integer, sex text, score real)"</span>;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> execSql:sql_stmt];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)dropTable&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *sql_stmt = <span class="string">@"drop table if exists t_stu"</span>;</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> execSql:sql_stmt];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="事务的开启与提交"><a href="#事务的开启与提交" class="headerlink" title="事务的开启与提交"></a>事务的开启与提交</h5><blockquote><ol><li>如果使用<code>sqlite_exec</code>或<code>sqlite_step()</code>执行数据库语句时,系统将自动对事务进行操作(开启/提交)</li><li>事务的开启与提交会消耗大量的时间,如果进行大批量数据操作,系统会多次开启/提交事务,大大影响程序的执行效率</li><li>优化方案: 在开始处理数据时,手动开启”事务”,数据处理完成后,手动关闭”事务”,系统将不会自动开启/提交事务</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (BOOL)beginTransaction &#123;</span><br><span class="line">    NSString *sql_stmt = @&quot;begin transaction&quot;;</span><br><span class="line">    return [sqliteTool execSql:sql_stmt];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (BOOL)commitTransaction &#123;</span><br><span class="line">    NSString *sql_stmt = @&quot;commit transaction&quot;;</span><br><span class="line">    return [sqliteTool execSql:sql_stmt];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="存储数据-gt-数据表"><a href="#存储数据-gt-数据表" class="headerlink" title="存储数据-&gt;数据表"></a>存储数据-&gt;数据表</h5><blockquote><p>方法一: 正常数据存储</p></blockquote><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)insertDataInTableOfSqlite:(StudentModel *)stuModel &#123;</span><br><span class="line">    <span class="built_in">NSString</span> *sql_stmt = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"insert into t_stu(name, age, sex, score) values ('%@', %ld, '%@', %.1f)"</span>, stuModel.name, stuModel.age, stuModel.sex, stuModel.score];</span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> execSql:sql_stmt];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>方法二: 大批量数据存储</p></blockquote><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)insertDataInTableOfSqlite &#123;</span><br><span class="line">    <span class="comment">// ?: 表示预留值</span></span><br><span class="line">    <span class="keyword">char</span> <span class="keyword">const</span> *sql_stmt = [<span class="string">@"insert into t_stu(name, age, sex, score) values (?, ?, ?, ?)"</span> UTF8String];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据"sql_stmt",生成"准备语句"</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 参数1: 数据库对象</span></span><br><span class="line"><span class="comment">     * 参数2: 数据库执行语句</span></span><br><span class="line"><span class="comment">     * 参数3: 提取的字符串长度 (-1: 自动计算)</span></span><br><span class="line"><span class="comment">     * 参数4: 预处理语句(准备语句)</span></span><br><span class="line"><span class="comment">     * 参数5: 根据"参数3"提取的长度后,剩余的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    sqlite3_stmt *sqlite_stmt;</span><br><span class="line">    <span class="keyword">if</span> (sqlite3_prepare_v2(DB, sql_stmt, <span class="number">-1</span>, &amp;sqlite_stmt, <span class="literal">NULL</span>) != SQLITE_OK) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 开启事务</span></span><br><span class="line">    [<span class="keyword">self</span> beginTransaction];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 插入数据(数据的个数: 10000)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSInteger</span> index = <span class="number">0</span>; index &lt; <span class="keyword">self</span>.stuModels.count; index ++) &#123;</span><br><span class="line">        <span class="comment">// 获得学生数据</span></span><br><span class="line">        StudentModel *stuModel = <span class="keyword">self</span>.stuModels[index];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数绑定(偷懒: runtime???)</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * 参数1: 准备语句</span></span><br><span class="line"><span class="comment">         * 参数2: 数据表中的列参数索引</span></span><br><span class="line"><span class="comment">         * 参数3: 绑定的值</span></span><br><span class="line"><span class="comment">         * 参数4: 值提取的长度(-1: 自动计算)</span></span><br><span class="line"><span class="comment">         * 参数5: 值的处理方式</span></span><br><span class="line"><span class="comment">         SQLITE_STATIC: 认为参数是常量,不会被释放(不做任何引用)</span></span><br><span class="line"><span class="comment">         SQLITE_TRANSIENT: 对参数进行引用</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        sqlite3_bind_text(sqlite_stmt, <span class="number">1</span>, stuModel.score, <span class="number">-1</span>, SQLITE_TRANSIENT);</span><br><span class="line">        sqlite3_bind_int(sqlite_stmt, <span class="number">2</span>, stuModel.age);</span><br><span class="line">        sqlite3_bind_text(sqlite_stmt, <span class="number">3</span>, stuModel.sex, <span class="number">-1</span>, SQLITE_TRANSIENT);</span><br><span class="line">        sqlite3_bind_double(sqlite_stmt, <span class="number">4</span>, stuModel.score);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 执行准备语句</span></span><br><span class="line">        <span class="keyword">if</span>(sqlite3_step(sqlite_stmt) == SQLITE_DONE) <span class="built_in">NSLog</span>(<span class="string">@"执行成功"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 重置语句(不管"成功/失败"都要执行)</span></span><br><span class="line">        sqlite3_reset(sqlite_stmt);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 提交事务</span></span><br><span class="line">    [<span class="keyword">self</span> commitTransaction];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放准备语句</span></span><br><span class="line">    sqlite3_finalize(sqlite_stmt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="查询-获取-数据-gt-数据表"><a href="#查询-获取-数据-gt-数据表" class="headerlink" title="查询(获取)数据-&gt;数据表"></a>查询(获取)数据-&gt;数据表</h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSArray</span> *)selectDataInTableOfSqlite &#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="keyword">const</span> *sql_stmt = [<span class="string">@"select * from t_stu"</span> UTF8String];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获得准备语句</span></span><br><span class="line">    sqlite3_stmt *sqlite_stmt;</span><br><span class="line">    <span class="keyword">if</span>(sqlite3_prepare_v2(DB, sql_stmt, <span class="number">-1</span>, &amp;sqlite_stmt, <span class="literal">NULL</span>) != SQLITE_OK) <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 保存搜索查询到的数据</span></span><br><span class="line">    <span class="built_in">NSMutableArray</span> *stuModels = [<span class="built_in">NSMutableArray</span> array];     </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 开启事务</span></span><br><span class="line">    [<span class="keyword">self</span>.sqliteTool beginTransaction];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(sqlite3_step(sqlite_stmt) == SQLITE_ROW) &#123;</span><br><span class="line">        StudentModel *stuModel = [[StudentModel alloc] init];</span><br><span class="line">                </span><br><span class="line">        <span class="comment">// 获得数据表中列的个数</span></span><br><span class="line">        <span class="keyword">int</span> count = sqlite3_column_count(sql_stmt);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; count; index ++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(index == <span class="number">0</span>) <span class="keyword">continue</span>; <span class="comment">// 数据表的唯一标识</span></span><br><span class="line">        </span><br><span class="line">            <span class="comment">// 获得列的名称</span></span><br><span class="line">            <span class="built_in">NSString</span> *key = [<span class="built_in">NSString</span> stringWithUTF8String:sqlite3_column_name(sql_stmt, index)];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 获得列的类型</span></span><br><span class="line">            <span class="keyword">int</span> type = sqlite3_column_type(sql_stmt, index);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 根据类型执行对应的方法</span></span><br><span class="line">            <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">                <span class="keyword">case</span> SQLITE_INTEGER: &#123;</span><br><span class="line">                    <span class="keyword">int</span> value = sqlite3_column_int(sql_stmt, index);</span><br><span class="line">                    [stuModel setValue:@(value) forKey:key]; <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> SQLITE_FLOAT: &#123;</span><br><span class="line">                    <span class="keyword">double</span> value = sqlite3_column_double(sql_stmt, index);</span><br><span class="line">                    [stuModel setValue:@(value) forKey:key]; <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> SQLITE_TEXT: &#123;</span><br><span class="line">                    <span class="built_in">NSString</span> *value = [<span class="built_in">NSString</span> stringWithUTF8String:(<span class="keyword">char</span> <span class="keyword">const</span> *)sqlite3_column_text(sql_stmt, index)];</span><br><span class="line">                    [stuModel setValue:value forKey:key]; <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        [stuModels addObject:stuModel];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 提交事务</span></span><br><span class="line">    [<span class="keyword">self</span> commitTransaction];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放准备语句</span></span><br><span class="line">    sqlite3_finalize(sql_stmt);</span><br><span class="line">    <span class="keyword">return</span> [stuModels <span class="keyword">copy</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;&amp;emsp;SQLite，是一款轻型的数据库，是遵守ACID的关系型数据库管理系统，它包含在一个相对小的C库中。它的设计目标是&lt;strong&gt;嵌入式&lt;/strong&gt;的，&lt;strong&gt;占用资源非常的低&lt;/strong&gt;，可能只需要几百K的内存就够了。它能够支持Windows/Linux/Unix等等主流的操作系统，同时能够跟很多程序语言相结合，比如 Tcl、C#、PHP、Java等，还有ODBC接口，同样比起Mysql、PostgreSQL这两款开源的世界著名数据库管理系统来讲，它的处理速度比他们都快。&lt;br&gt;
    
    </summary>
    
      <category term="iOS笔记" scheme="http://yoursite.com/categories/iOS%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
